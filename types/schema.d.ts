/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Alignment =
  | "chaotic evil"
  | "chaotic good"
  | "chaotic neutral"
  | "lawful evil"
  | "lawful good"
  | "lawful neutral"
  | "neutral"
  | "neutral evil"
  | "neutral good";
export type Language =
  | "abyssal"
  | "celestial"
  | "common"
  | "deep speech"
  | "draconic"
  | "druidic"
  | "dwarvish"
  | "elvish"
  | "giant"
  | "gnomish"
  | "gobling"
  | "halfling"
  | "infernal"
  | "orc"
  | "primordial"
  | "sylvan"
  | "undercommon";
export type Armor =
  | "breastplate"
  | "chain mail"
  | "chain shirt"
  | "halfplate"
  | "heavy armor"
  | "hide"
  | "leather"
  | "light armor"
  | "medium armor"
  | "padded"
  | "plate"
  | "ring mail"
  | "scale mail"
  | "shield"
  | "spiked armor"
  | "splint"
  | "studded leather";
export type Weapon =
  | "battleaxe"
  | "blowgun"
  | "club"
  | "dagger"
  | "dart"
  | "firearms"
  | "flail"
  | "glaive"
  | "greataxe"
  | "greatclub"
  | "greatsword"
  | "halberd"
  | "handaxe"
  | "hand crossbow"
  | "heavy crossbow"
  | "javelin"
  | "lance"
  | "light crossbow"
  | "light hammer"
  | "longbow"
  | "longsword"
  | "mace"
  | "martial melee weapon"
  | "martial ranged weapon"
  | "martial weapon"
  | "maul"
  | "melee weapon"
  | "morningstar"
  | "net"
  | "pike"
  | "quarterstaff"
  | "ranged weapon"
  | "rapier"
  | "scimitar"
  | "shortbow"
  | "shortsword"
  | "sickle"
  | "simple melee weapon"
  | "simple ranged weapon"
  | "simple weapon"
  | "sling"
  | "spear"
  | "trident"
  | "war pick"
  | "warhammer"
  | "whip";
export type Size = "gargantuan" | "huge" | "large" | "medium" | "small" | "tiny";

export interface Character {
  abilityScores: {
    str: AbilityScore;
    dex: AbilityScore;
    con: AbilityScore;
    int: AbilityScore;
    wis: AbilityScore;
    cha: AbilityScore;
    [k: string]: unknown;
  };
  ac: number;
  background: Background;
  biography: {
    alignment: Alignment;
    backstory: string;
    bonds: string;
    flaws: string;
    gender: Gender;
    ideals: string;
    name: Name;
    personalityTraits: string;
    physicalDescription: {
      description: string;
      dress: string;
      eyes: string;
      hair: string;
      height: Height;
      skin: string;
      weight: Weight;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  classes: Class[];
  hitPoints: HitPoints;
  initiative: number;
  inspiration: boolean;
  languages: (Language | string)[];
  proficiencies: {
    armor: (Armor | string)[];
    tool: string[];
    weapon: (Weapon | string)[];
    [k: string]: unknown;
  };
  proficiencyBonus: number;
  race: Race;
  skills: {
    acrobatics: Skill;
    animalHandling: Skill;
    arcana: Skill;
    athletics: Skill;
    deception: Skill;
    history: Skill;
    insight: Skill;
    intimidation: Skill;
    investigation: Skill;
    medicine: Skill;
    nature: Skill;
    perception: Skill;
    performance: Skill;
    persuasion: Skill;
    religion: Skill;
    sleightOfHand: Skill;
    stealth: Skill;
    survival: Skill;
    [k: string]: unknown;
  };
  speed: Speed[];
  [k: string]: unknown;
}
export interface AbilityScore {
  mod: number;
  savingThrowProficiency: boolean;
  score: number;
  [k: string]: unknown;
}
export interface Background {
  name: string;
  [k: string]: unknown;
}
export interface Gender {
  name: string;
  pronouns?: {
    objectivePronoun?: string;
    possessivePronoun?: string;
    subjectivePronoun?: string;
    [k: string]: unknown;
  }[];
  [k: string]: unknown;
}
export interface Name {
  first: string;
  honorific?: string;
  last?: string;
  middle?: string;
  prefix?: string;
  suffix?: string;
  title?: string;
  [k: string]: unknown;
}
export interface Height {
  firstUnit: Unit;
  secondUnit: Unit;
  [k: string]: unknown;
}
export interface Unit {
  name: string;
  indicator: string;
  value: number;
  [k: string]: unknown;
}
export interface Weight {
  name: string;
  indicator: string;
  value: number;
  [k: string]: unknown;
}
export interface Class {
  hitDiceValue: number;
  level: number;
  name: string;
  subClass?: SubClass;
  [k: string]: unknown;
}
export interface SubClass {
  name: string;
  [k: string]: unknown;
}
export interface HitPoints {
  current: number;
  max: number;
  temporary: number;
  [k: string]: unknown;
}
export interface Race {
  name: string;
  size: Size;
  subrace?: {
    name: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface Skill {
  ability: "str" | "dex" | "con" | "int" | "wis" | "cha";
  mod: number;
  proficiency?: "none" | "proficient" | "expertise";
  [k: string]: unknown;
}
export interface Speed {
  name?: string;
  unit: string;
  value: number;
  [k: string]: unknown;
}
